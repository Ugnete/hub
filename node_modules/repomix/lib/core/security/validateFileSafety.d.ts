import type { RepomixConfigMerged } from '../../config/configSchema.js';
import type { RepomixProgressCallback } from '../../shared/types.js';
import type { RawFile } from '../file/fileTypes.js';
import { type SuspiciousFileResult } from './securityCheck.js';
export declare const validateFileSafety: (rawFiles: RawFile[], progressCallback: RepomixProgressCallback, config: RepomixConfigMerged, deps?: {
    runSecurityCheck: (rawFiles: RawFile[], progressCallback?: RepomixProgressCallback, deps?: {
        initTaskRunner: (numOfTasks: number) => (task: import("./workers/securityCheckWorker.js").SecurityCheckTask) => Promise<any>;
    }) => Promise<SuspiciousFileResult[]>;
    filterOutUntrustedFiles: (rawFiles: RawFile[], suspiciousFilesResults: SuspiciousFileResult[]) => RawFile[];
}) => Promise<{
    safeRawFiles: RawFile[];
    safeFilePaths: string[];
    suspiciousFilesResults: SuspiciousFileResult[];
}>;
//# sourceMappingURL=validateFileSafety.d.ts.map